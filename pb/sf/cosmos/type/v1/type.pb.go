// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sf/cosmos/type/v1/type.proto

package pbcosmos

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "github.com/streamingfast/pbgo/sf/firehose/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignedMsgType int32

const (
	SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN   SignedMsgType = 0
	SignedMsgType_SIGNED_MSG_TYPE_PREVOTE   SignedMsgType = 1
	SignedMsgType_SIGNED_MSG_TYPE_PRECOMMIT SignedMsgType = 2
	SignedMsgType_SIGNED_MSG_TYPE_PROPOSAL  SignedMsgType = 32
)

// Enum value maps for SignedMsgType.
var (
	SignedMsgType_name = map[int32]string{
		0:  "SIGNED_MSG_TYPE_UNKNOWN",
		1:  "SIGNED_MSG_TYPE_PREVOTE",
		2:  "SIGNED_MSG_TYPE_PRECOMMIT",
		32: "SIGNED_MSG_TYPE_PROPOSAL",
	}
	SignedMsgType_value = map[string]int32{
		"SIGNED_MSG_TYPE_UNKNOWN":   0,
		"SIGNED_MSG_TYPE_PREVOTE":   1,
		"SIGNED_MSG_TYPE_PRECOMMIT": 2,
		"SIGNED_MSG_TYPE_PROPOSAL":  32,
	}
)

func (x SignedMsgType) Enum() *SignedMsgType {
	p := new(SignedMsgType)
	*p = x
	return p
}

func (x SignedMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignedMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_cosmos_type_v1_type_proto_enumTypes[0].Descriptor()
}

func (SignedMsgType) Type() protoreflect.EnumType {
	return &file_sf_cosmos_type_v1_type_proto_enumTypes[0]
}

func (x SignedMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignedMsgType.Descriptor instead.
func (SignedMsgType) EnumDescriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{0}
}

type BlockIDFlag int32

const (
	BlockIDFlag_BLOCK_ID_FLAG_UNKNOWN BlockIDFlag = 0
	BlockIDFlag_BLOCK_ID_FLAG_ABSENT  BlockIDFlag = 1
	BlockIDFlag_BLOCK_ID_FLAG_COMMIT  BlockIDFlag = 2
	BlockIDFlag_BLOCK_ID_FLAG_NIL     BlockIDFlag = 3
)

// Enum value maps for BlockIDFlag.
var (
	BlockIDFlag_name = map[int32]string{
		0: "BLOCK_ID_FLAG_UNKNOWN",
		1: "BLOCK_ID_FLAG_ABSENT",
		2: "BLOCK_ID_FLAG_COMMIT",
		3: "BLOCK_ID_FLAG_NIL",
	}
	BlockIDFlag_value = map[string]int32{
		"BLOCK_ID_FLAG_UNKNOWN": 0,
		"BLOCK_ID_FLAG_ABSENT":  1,
		"BLOCK_ID_FLAG_COMMIT":  2,
		"BLOCK_ID_FLAG_NIL":     3,
	}
)

func (x BlockIDFlag) Enum() *BlockIDFlag {
	p := new(BlockIDFlag)
	*p = x
	return p
}

func (x BlockIDFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockIDFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_cosmos_type_v1_type_proto_enumTypes[1].Descriptor()
}

func (BlockIDFlag) Type() protoreflect.EnumType {
	return &file_sf_cosmos_type_v1_type_proto_enumTypes[1]
}

func (x BlockIDFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockIDFlag.Descriptor instead.
func (BlockIDFlag) EnumDescriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{1}
}

type SignMode int32

const (
	SignMode_SIGN_MODE_UNSPECIFIED       SignMode = 0
	SignMode_SIGN_MODE_DIRECT            SignMode = 1
	SignMode_SIGN_MODE_TEXTUAL           SignMode = 2
	SignMode_SIGN_MODE_LEGACY_AMINO_JSON SignMode = 127
)

// Enum value maps for SignMode.
var (
	SignMode_name = map[int32]string{
		0:   "SIGN_MODE_UNSPECIFIED",
		1:   "SIGN_MODE_DIRECT",
		2:   "SIGN_MODE_TEXTUAL",
		127: "SIGN_MODE_LEGACY_AMINO_JSON",
	}
	SignMode_value = map[string]int32{
		"SIGN_MODE_UNSPECIFIED":       0,
		"SIGN_MODE_DIRECT":            1,
		"SIGN_MODE_TEXTUAL":           2,
		"SIGN_MODE_LEGACY_AMINO_JSON": 127,
	}
)

func (x SignMode) Enum() *SignMode {
	p := new(SignMode)
	*p = x
	return p
}

func (x SignMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignMode) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_cosmos_type_v1_type_proto_enumTypes[2].Descriptor()
}

func (SignMode) Type() protoreflect.EnumType {
	return &file_sf_cosmos_type_v1_type_proto_enumTypes[2]
}

func (x SignMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignMode.Descriptor instead.
func (SignMode) EnumDescriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{2}
}

type Block struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Header              *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Evidence            *EvidenceList          `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	LastCommit          *Commit                `protobuf:"bytes,3,opt,name=last_commit,json=lastCommit,proto3" json:"last_commit,omitempty"`
	ResultFinalizeBlock *ResponseFinalizeBlock `protobuf:"bytes,6,opt,name=result_finalize_block,json=resultFinalizeBlock,proto3" json:"result_finalize_block,omitempty"`
	Transactions        []*TxResult            `protobuf:"bytes,7,rep,name=transactions,proto3" json:"transactions,omitempty"`
	ValidatorUpdates    []*Validator           `protobuf:"bytes,8,rep,name=validator_updates,json=validatorUpdates,proto3" json:"validator_updates,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetEvidence() *EvidenceList {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *Block) GetLastCommit() *Commit {
	if x != nil {
		return x.LastCommit
	}
	return nil
}

func (x *Block) GetResultFinalizeBlock() *ResponseFinalizeBlock {
	if x != nil {
		return x.ResultFinalizeBlock
	}
	return nil
}

func (x *Block) GetTransactions() []*TxResult {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetValidatorUpdates() []*Validator {
	if x != nil {
		return x.ValidatorUpdates
	}
	return nil
}

// HeaderOnlyBlock is a standard [Block] structure where all other fields are
// removed so that hydrating that object from a [Block] bytes payload will
// drastically reduce allocated memory required to hold the full block.
//
// This can be used to unpack a [Block] when only the [Header] information
// is required and greatly reduce required memory.
type HeaderOnlyBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderOnlyBlock) Reset() {
	*x = HeaderOnlyBlock{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderOnlyBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderOnlyBlock) ProtoMessage() {}

func (x *HeaderOnlyBlock) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderOnlyBlock.ProtoReflect.Descriptor instead.
func (*HeaderOnlyBlock) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{1}
}

func (x *HeaderOnlyBlock) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

type EventData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Block         *HeaderOnlyBlock       `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Tx            *TransactionContext    `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{2}
}

func (x *EventData) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *EventData) GetBlock() *HeaderOnlyBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *EventData) GetTx() *TransactionContext {
	if x != nil {
		return x.Tx
	}
	return nil
}

type TransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tx            *TxResult              `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Block         *HeaderOnlyBlock       `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionData) Reset() {
	*x = TransactionData{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionData) ProtoMessage() {}

func (x *TransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionData.ProtoReflect.Descriptor instead.
func (*TransactionData) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionData) GetTx() *TxResult {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TransactionData) GetBlock() *HeaderOnlyBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

type MessageData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *anypb.Any             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Block         *HeaderOnlyBlock       `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Tx            *TransactionContext    `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageData) Reset() {
	*x = MessageData{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageData) ProtoMessage() {}

func (x *MessageData) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageData.ProtoReflect.Descriptor instead.
func (*MessageData) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{4}
}

func (x *MessageData) GetMessage() *anypb.Any {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *MessageData) GetBlock() *HeaderOnlyBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *MessageData) GetTx() *TransactionContext {
	if x != nil {
		return x.Tx
	}
	return nil
}

type TransactionContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Code          uint32                 `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	GasWanted     int64                  `protobuf:"varint,4,opt,name=gas_wanted,json=gasWanted,proto3" json:"gas_wanted,omitempty"`
	GasUsed       int64                  `protobuf:"varint,5,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionContext) Reset() {
	*x = TransactionContext{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionContext) ProtoMessage() {}

func (x *TransactionContext) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionContext.ProtoReflect.Descriptor instead.
func (*TransactionContext) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionContext) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *TransactionContext) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionContext) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TransactionContext) GetGasWanted() int64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *TransactionContext) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type Header struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Version            *Consensus             `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ChainId            string                 `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Height             uint64                 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Time               *Timestamp             `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	LastBlockId        *BlockID               `protobuf:"bytes,5,opt,name=last_block_id,json=lastBlockId,proto3" json:"last_block_id,omitempty"`
	LastCommitHash     []byte                 `protobuf:"bytes,6,opt,name=last_commit_hash,json=lastCommitHash,proto3" json:"last_commit_hash,omitempty"`
	DataHash           []byte                 `protobuf:"bytes,7,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	ValidatorsHash     []byte                 `protobuf:"bytes,8,opt,name=validators_hash,json=validatorsHash,proto3" json:"validators_hash,omitempty"`
	NextValidatorsHash []byte                 `protobuf:"bytes,9,opt,name=next_validators_hash,json=nextValidatorsHash,proto3" json:"next_validators_hash,omitempty"`
	ConsensusHash      []byte                 `protobuf:"bytes,10,opt,name=consensus_hash,json=consensusHash,proto3" json:"consensus_hash,omitempty"`
	AppHash            []byte                 `protobuf:"bytes,11,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	LastResultsHash    []byte                 `protobuf:"bytes,12,opt,name=last_results_hash,json=lastResultsHash,proto3" json:"last_results_hash,omitempty"`
	EvidenceHash       []byte                 `protobuf:"bytes,13,opt,name=evidence_hash,json=evidenceHash,proto3" json:"evidence_hash,omitempty"`
	ProposerAddress    []byte                 `protobuf:"bytes,14,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
	Hash               []byte                 `protobuf:"bytes,15,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{6}
}

func (x *Header) GetVersion() *Consensus {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Header) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Header) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Header) GetTime() *Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Header) GetLastBlockId() *BlockID {
	if x != nil {
		return x.LastBlockId
	}
	return nil
}

func (x *Header) GetLastCommitHash() []byte {
	if x != nil {
		return x.LastCommitHash
	}
	return nil
}

func (x *Header) GetDataHash() []byte {
	if x != nil {
		return x.DataHash
	}
	return nil
}

func (x *Header) GetValidatorsHash() []byte {
	if x != nil {
		return x.ValidatorsHash
	}
	return nil
}

func (x *Header) GetNextValidatorsHash() []byte {
	if x != nil {
		return x.NextValidatorsHash
	}
	return nil
}

func (x *Header) GetConsensusHash() []byte {
	if x != nil {
		return x.ConsensusHash
	}
	return nil
}

func (x *Header) GetAppHash() []byte {
	if x != nil {
		return x.AppHash
	}
	return nil
}

func (x *Header) GetLastResultsHash() []byte {
	if x != nil {
		return x.LastResultsHash
	}
	return nil
}

func (x *Header) GetEvidenceHash() []byte {
	if x != nil {
		return x.EvidenceHash
	}
	return nil
}

func (x *Header) GetProposerAddress() []byte {
	if x != nil {
		return x.ProposerAddress
	}
	return nil
}

func (x *Header) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Consensus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         uint64                 `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	App           uint64                 `protobuf:"varint,2,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consensus) Reset() {
	*x = Consensus{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consensus) ProtoMessage() {}

func (x *Consensus) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consensus.ProtoReflect.Descriptor instead.
func (*Consensus) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{7}
}

func (x *Consensus) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Consensus) GetApp() uint64 {
	if x != nil {
		return x.App
	}
	return 0
}

type Timestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seconds       int64                  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos         int32                  `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{8}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type BlockID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PartSetHeader *PartSetHeader         `protobuf:"bytes,2,opt,name=part_set_header,json=partSetHeader,proto3" json:"part_set_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockID) Reset() {
	*x = BlockID{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockID) ProtoMessage() {}

func (x *BlockID) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockID.ProtoReflect.Descriptor instead.
func (*BlockID) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{9}
}

func (x *BlockID) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BlockID) GetPartSetHeader() *PartSetHeader {
	if x != nil {
		return x.PartSetHeader
	}
	return nil
}

type PartSetHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Hash          []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartSetHeader) Reset() {
	*x = PartSetHeader{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartSetHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartSetHeader) ProtoMessage() {}

func (x *PartSetHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartSetHeader.ProtoReflect.Descriptor instead.
func (*PartSetHeader) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{10}
}

func (x *PartSetHeader) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PartSetHeader) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type EvidenceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Evidence      []*Evidence            `protobuf:"bytes,1,rep,name=evidence,proto3" json:"evidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvidenceList) Reset() {
	*x = EvidenceList{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvidenceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceList) ProtoMessage() {}

func (x *EvidenceList) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceList.ProtoReflect.Descriptor instead.
func (*EvidenceList) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{11}
}

func (x *EvidenceList) GetEvidence() []*Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type Evidence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sum:
	//
	//	*Evidence_DuplicateVoteEvidence
	//	*Evidence_LightClientAttackEvidence
	Sum           isEvidence_Sum `protobuf_oneof:"sum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{12}
}

func (x *Evidence) GetSum() isEvidence_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *Evidence) GetDuplicateVoteEvidence() *DuplicateVoteEvidence {
	if x != nil {
		if x, ok := x.Sum.(*Evidence_DuplicateVoteEvidence); ok {
			return x.DuplicateVoteEvidence
		}
	}
	return nil
}

func (x *Evidence) GetLightClientAttackEvidence() *LightClientAttackEvidence {
	if x != nil {
		if x, ok := x.Sum.(*Evidence_LightClientAttackEvidence); ok {
			return x.LightClientAttackEvidence
		}
	}
	return nil
}

type isEvidence_Sum interface {
	isEvidence_Sum()
}

type Evidence_DuplicateVoteEvidence struct {
	DuplicateVoteEvidence *DuplicateVoteEvidence `protobuf:"bytes,1,opt,name=duplicate_vote_evidence,json=duplicateVoteEvidence,proto3,oneof"`
}

type Evidence_LightClientAttackEvidence struct {
	LightClientAttackEvidence *LightClientAttackEvidence `protobuf:"bytes,2,opt,name=light_client_attack_evidence,json=lightClientAttackEvidence,proto3,oneof"`
}

func (*Evidence_DuplicateVoteEvidence) isEvidence_Sum() {}

func (*Evidence_LightClientAttackEvidence) isEvidence_Sum() {}

type DuplicateVoteEvidence struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	VoteA            *EventVote             `protobuf:"bytes,1,opt,name=vote_a,json=voteA,proto3" json:"vote_a,omitempty"`
	VoteB            *EventVote             `protobuf:"bytes,2,opt,name=vote_b,json=voteB,proto3" json:"vote_b,omitempty"`
	TotalVotingPower int64                  `protobuf:"varint,3,opt,name=total_voting_power,json=totalVotingPower,proto3" json:"total_voting_power,omitempty"`
	ValidatorPower   int64                  `protobuf:"varint,4,opt,name=validator_power,json=validatorPower,proto3" json:"validator_power,omitempty"`
	Timestamp        *Timestamp             `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DuplicateVoteEvidence) Reset() {
	*x = DuplicateVoteEvidence{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuplicateVoteEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicateVoteEvidence) ProtoMessage() {}

func (x *DuplicateVoteEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicateVoteEvidence.ProtoReflect.Descriptor instead.
func (*DuplicateVoteEvidence) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{13}
}

func (x *DuplicateVoteEvidence) GetVoteA() *EventVote {
	if x != nil {
		return x.VoteA
	}
	return nil
}

func (x *DuplicateVoteEvidence) GetVoteB() *EventVote {
	if x != nil {
		return x.VoteB
	}
	return nil
}

func (x *DuplicateVoteEvidence) GetTotalVotingPower() int64 {
	if x != nil {
		return x.TotalVotingPower
	}
	return 0
}

func (x *DuplicateVoteEvidence) GetValidatorPower() int64 {
	if x != nil {
		return x.ValidatorPower
	}
	return 0
}

func (x *DuplicateVoteEvidence) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type EventVote struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	EventVoteType      SignedMsgType          `protobuf:"varint,1,opt,name=event_vote_type,json=type,proto3,enum=sf.cosmos.type.v1.SignedMsgType" json:"event_vote_type,omitempty"`
	Height             uint64                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round              int32                  `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	BlockId            *BlockID               `protobuf:"bytes,4,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Timestamp          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ValidatorAddress   []byte                 `protobuf:"bytes,6,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	ValidatorIndex     int32                  `protobuf:"varint,7,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	Signature          []byte                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	Extension          []byte                 `protobuf:"bytes,9,opt,name=extension,proto3" json:"extension,omitempty"`
	ExtensionSignature []byte                 `protobuf:"bytes,10,opt,name=extension_signature,json=extensionSignature,proto3" json:"extension_signature,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EventVote) Reset() {
	*x = EventVote{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventVote) ProtoMessage() {}

func (x *EventVote) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventVote.ProtoReflect.Descriptor instead.
func (*EventVote) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{14}
}

func (x *EventVote) GetEventVoteType() SignedMsgType {
	if x != nil {
		return x.EventVoteType
	}
	return SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN
}

func (x *EventVote) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EventVote) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *EventVote) GetBlockId() *BlockID {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *EventVote) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventVote) GetValidatorAddress() []byte {
	if x != nil {
		return x.ValidatorAddress
	}
	return nil
}

func (x *EventVote) GetValidatorIndex() int32 {
	if x != nil {
		return x.ValidatorIndex
	}
	return 0
}

func (x *EventVote) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *EventVote) GetExtension() []byte {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *EventVote) GetExtensionSignature() []byte {
	if x != nil {
		return x.ExtensionSignature
	}
	return nil
}

type LightClientAttackEvidence struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ConflictingBlock    *LightBlock            `protobuf:"bytes,1,opt,name=conflicting_block,json=conflictingBlock,proto3" json:"conflicting_block,omitempty"`
	CommonHeight        int64                  `protobuf:"varint,2,opt,name=common_height,json=commonHeight,proto3" json:"common_height,omitempty"`
	ByzantineValidators []*Validator           `protobuf:"bytes,3,rep,name=byzantine_validators,json=byzantineValidators,proto3" json:"byzantine_validators,omitempty"`
	TotalVotingPower    int64                  `protobuf:"varint,4,opt,name=total_voting_power,json=totalVotingPower,proto3" json:"total_voting_power,omitempty"`
	Timestamp           *Timestamp             `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LightClientAttackEvidence) Reset() {
	*x = LightClientAttackEvidence{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightClientAttackEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientAttackEvidence) ProtoMessage() {}

func (x *LightClientAttackEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientAttackEvidence.ProtoReflect.Descriptor instead.
func (*LightClientAttackEvidence) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{15}
}

func (x *LightClientAttackEvidence) GetConflictingBlock() *LightBlock {
	if x != nil {
		return x.ConflictingBlock
	}
	return nil
}

func (x *LightClientAttackEvidence) GetCommonHeight() int64 {
	if x != nil {
		return x.CommonHeight
	}
	return 0
}

func (x *LightClientAttackEvidence) GetByzantineValidators() []*Validator {
	if x != nil {
		return x.ByzantineValidators
	}
	return nil
}

func (x *LightClientAttackEvidence) GetTotalVotingPower() int64 {
	if x != nil {
		return x.TotalVotingPower
	}
	return 0
}

func (x *LightClientAttackEvidence) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type LightBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedHeader  *SignedHeader          `protobuf:"bytes,1,opt,name=signed_header,json=signedHeader,proto3" json:"signed_header,omitempty"`
	ValidatorSet  *ValidatorSet          `protobuf:"bytes,2,opt,name=validator_set,json=validatorSet,proto3" json:"validator_set,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightBlock) Reset() {
	*x = LightBlock{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightBlock) ProtoMessage() {}

func (x *LightBlock) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightBlock.ProtoReflect.Descriptor instead.
func (*LightBlock) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{16}
}

func (x *LightBlock) GetSignedHeader() *SignedHeader {
	if x != nil {
		return x.SignedHeader
	}
	return nil
}

func (x *LightBlock) GetValidatorSet() *ValidatorSet {
	if x != nil {
		return x.ValidatorSet
	}
	return nil
}

type SignedHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Commit        *Commit                `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedHeader) Reset() {
	*x = SignedHeader{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedHeader) ProtoMessage() {}

func (x *SignedHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedHeader.ProtoReflect.Descriptor instead.
func (*SignedHeader) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{17}
}

func (x *SignedHeader) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SignedHeader) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type Commit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        int64                  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round         int32                  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	BlockId       *BlockID               `protobuf:"bytes,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Signatures    []*CommitSig           `protobuf:"bytes,4,rep,name=signatures,proto3" json:"signatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{18}
}

func (x *Commit) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Commit) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *Commit) GetBlockId() *BlockID {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *Commit) GetSignatures() []*CommitSig {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type CommitSig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BlockIdFlag      BlockIDFlag            `protobuf:"varint,1,opt,name=block_id_flag,json=blockIdFlag,proto3,enum=sf.cosmos.type.v1.BlockIDFlag" json:"block_id_flag,omitempty"`
	ValidatorAddress []byte                 `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature        []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommitSig) Reset() {
	*x = CommitSig{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitSig) ProtoMessage() {}

func (x *CommitSig) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitSig.ProtoReflect.Descriptor instead.
func (*CommitSig) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{19}
}

func (x *CommitSig) GetBlockIdFlag() BlockIDFlag {
	if x != nil {
		return x.BlockIdFlag
	}
	return BlockIDFlag_BLOCK_ID_FLAG_UNKNOWN
}

func (x *CommitSig) GetValidatorAddress() []byte {
	if x != nil {
		return x.ValidatorAddress
	}
	return nil
}

func (x *CommitSig) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CommitSig) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ValidatorSet struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Validators       []*Validator           `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
	Proposer         *Validator             `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	TotalVotingPower int64                  `protobuf:"varint,3,opt,name=total_voting_power,json=totalVotingPower,proto3" json:"total_voting_power,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidatorSet) Reset() {
	*x = ValidatorSet{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSet) ProtoMessage() {}

func (x *ValidatorSet) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorSet.ProtoReflect.Descriptor instead.
func (*ValidatorSet) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{20}
}

func (x *ValidatorSet) GetValidators() []*Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *ValidatorSet) GetProposer() *Validator {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *ValidatorSet) GetTotalVotingPower() int64 {
	if x != nil {
		return x.TotalVotingPower
	}
	return 0
}

type Validator struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Address          []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PubKey           *PublicKey             `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	VotingPower      int64                  `protobuf:"varint,3,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
	ProposerPriority int64                  `protobuf:"varint,4,opt,name=proposer_priority,json=proposerPriority,proto3" json:"proposer_priority,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Validator) Reset() {
	*x = Validator{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{21}
}

func (x *Validator) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Validator) GetPubKey() *PublicKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *Validator) GetVotingPower() int64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

func (x *Validator) GetProposerPriority() int64 {
	if x != nil {
		return x.ProposerPriority
	}
	return 0
}

type PublicKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sum:
	//
	//	*PublicKey_Ed25519
	//	*PublicKey_Secp256K1
	Sum           isPublicKey_Sum `protobuf_oneof:"sum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{22}
}

func (x *PublicKey) GetSum() isPublicKey_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *PublicKey) GetEd25519() []byte {
	if x != nil {
		if x, ok := x.Sum.(*PublicKey_Ed25519); ok {
			return x.Ed25519
		}
	}
	return nil
}

func (x *PublicKey) GetSecp256K1() []byte {
	if x != nil {
		if x, ok := x.Sum.(*PublicKey_Secp256K1); ok {
			return x.Secp256K1
		}
	}
	return nil
}

type isPublicKey_Sum interface {
	isPublicKey_Sum()
}

type PublicKey_Ed25519 struct {
	Ed25519 []byte `protobuf:"bytes,1,opt,name=ed25519,proto3,oneof"`
}

type PublicKey_Secp256K1 struct {
	Secp256K1 []byte `protobuf:"bytes,2,opt,name=secp256k1,proto3,oneof"`
}

func (*PublicKey_Ed25519) isPublicKey_Sum() {}

func (*PublicKey_Secp256K1) isPublicKey_Sum() {}

type ResponseBeginBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseBeginBlock) Reset() {
	*x = ResponseBeginBlock{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseBeginBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBeginBlock) ProtoMessage() {}

func (x *ResponseBeginBlock) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBeginBlock.ProtoReflect.Descriptor instead.
func (*ResponseBeginBlock) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{23}
}

func (x *ResponseBeginBlock) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type ResponseEndBlock struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ValidatorUpdates      []*ValidatorUpdate     `protobuf:"bytes,1,rep,name=validator_updates,json=validatorUpdates,proto3" json:"validator_updates,omitempty"`
	ConsensusParamUpdates *ConsensusParams       `protobuf:"bytes,2,opt,name=consensus_param_updates,json=consensusParamUpdates,proto3" json:"consensus_param_updates,omitempty"`
	Events                []*Event               `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResponseEndBlock) Reset() {
	*x = ResponseEndBlock{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEndBlock) ProtoMessage() {}

func (x *ResponseEndBlock) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEndBlock.ProtoReflect.Descriptor instead.
func (*ResponseEndBlock) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{24}
}

func (x *ResponseEndBlock) GetValidatorUpdates() []*ValidatorUpdate {
	if x != nil {
		return x.ValidatorUpdates
	}
	return nil
}

func (x *ResponseEndBlock) GetConsensusParamUpdates() *ConsensusParams {
	if x != nil {
		return x.ConsensusParamUpdates
	}
	return nil
}

func (x *ResponseEndBlock) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type ResponseFinalizeBlock struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Events                []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	ValidatorUpdates      []*ValidatorUpdate     `protobuf:"bytes,2,rep,name=validator_updates,json=validatorUpdates,proto3" json:"validator_updates,omitempty"`
	ConsensusParamUpdates *ConsensusParams       `protobuf:"bytes,3,opt,name=consensus_param_updates,json=consensusParamUpdates,proto3" json:"consensus_param_updates,omitempty"`
	AppHash               []byte                 `protobuf:"bytes,4,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResponseFinalizeBlock) Reset() {
	*x = ResponseFinalizeBlock{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseFinalizeBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFinalizeBlock) ProtoMessage() {}

func (x *ResponseFinalizeBlock) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFinalizeBlock.ProtoReflect.Descriptor instead.
func (*ResponseFinalizeBlock) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{25}
}

func (x *ResponseFinalizeBlock) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ResponseFinalizeBlock) GetValidatorUpdates() []*ValidatorUpdate {
	if x != nil {
		return x.ValidatorUpdates
	}
	return nil
}

func (x *ResponseFinalizeBlock) GetConsensusParamUpdates() *ConsensusParams {
	if x != nil {
		return x.ConsensusParamUpdates
	}
	return nil
}

func (x *ResponseFinalizeBlock) GetAppHash() []byte {
	if x != nil {
		return x.AppHash
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=type,proto3" json:"event_type,omitempty"`
	Attributes    []*EventAttribute      `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{26}
}

func (x *Event) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Event) GetAttributes() []*EventAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type EventAttribute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Index         bool                   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventAttribute) Reset() {
	*x = EventAttribute{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAttribute) ProtoMessage() {}

func (x *EventAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAttribute.ProtoReflect.Descriptor instead.
func (*EventAttribute) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{27}
}

func (x *EventAttribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EventAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventAttribute) GetIndex() bool {
	if x != nil {
		return x.Index
	}
	return false
}

type ValidatorUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PubKey        *PublicKey             `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Power         int64                  `protobuf:"varint,3,opt,name=power,proto3" json:"power,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatorUpdate) Reset() {
	*x = ValidatorUpdate{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorUpdate) ProtoMessage() {}

func (x *ValidatorUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorUpdate.ProtoReflect.Descriptor instead.
func (*ValidatorUpdate) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{28}
}

func (x *ValidatorUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ValidatorUpdate) GetPubKey() *PublicKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *ValidatorUpdate) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

type ConsensusParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *BlockParams           `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Evidence      *EvidenceParams        `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Validator     *ValidatorParams       `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
	Version       *VersionParams         `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsensusParams) Reset() {
	*x = ConsensusParams{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusParams) ProtoMessage() {}

func (x *ConsensusParams) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusParams.ProtoReflect.Descriptor instead.
func (*ConsensusParams) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{29}
}

func (x *ConsensusParams) GetBlock() *BlockParams {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ConsensusParams) GetEvidence() *EvidenceParams {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *ConsensusParams) GetValidator() *ValidatorParams {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *ConsensusParams) GetVersion() *VersionParams {
	if x != nil {
		return x.Version
	}
	return nil
}

type BlockParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxBytes      int64                  `protobuf:"varint,1,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	MaxGas        int64                  `protobuf:"varint,2,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockParams) Reset() {
	*x = BlockParams{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockParams) ProtoMessage() {}

func (x *BlockParams) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockParams.ProtoReflect.Descriptor instead.
func (*BlockParams) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{30}
}

func (x *BlockParams) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *BlockParams) GetMaxGas() int64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

type EvidenceParams struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxAgeNumBlocks int64                  `protobuf:"varint,1,opt,name=max_age_num_blocks,json=maxAgeNumBlocks,proto3" json:"max_age_num_blocks,omitempty"`
	MaxAgeDuration  *Duration              `protobuf:"bytes,2,opt,name=max_age_duration,json=maxAgeDuration,proto3" json:"max_age_duration,omitempty"`
	MaxBytes        int64                  `protobuf:"varint,3,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EvidenceParams) Reset() {
	*x = EvidenceParams{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvidenceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceParams) ProtoMessage() {}

func (x *EvidenceParams) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceParams.ProtoReflect.Descriptor instead.
func (*EvidenceParams) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{31}
}

func (x *EvidenceParams) GetMaxAgeNumBlocks() int64 {
	if x != nil {
		return x.MaxAgeNumBlocks
	}
	return 0
}

func (x *EvidenceParams) GetMaxAgeDuration() *Duration {
	if x != nil {
		return x.MaxAgeDuration
	}
	return nil
}

func (x *EvidenceParams) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

type Duration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seconds       int64                  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos         int32                  `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Duration) Reset() {
	*x = Duration{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{32}
}

func (x *Duration) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Duration) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type ValidatorParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PubKeyTypes   []string               `protobuf:"bytes,1,rep,name=pub_key_types,json=pubKeyTypes,proto3" json:"pub_key_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatorParams) Reset() {
	*x = ValidatorParams{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorParams) ProtoMessage() {}

func (x *ValidatorParams) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorParams.ProtoReflect.Descriptor instead.
func (*ValidatorParams) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{33}
}

func (x *ValidatorParams) GetPubKeyTypes() []string {
	if x != nil {
		return x.PubKeyTypes
	}
	return nil
}

type VersionParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppVersion    uint64                 `protobuf:"varint,1,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionParams) Reset() {
	*x = VersionParams{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionParams) ProtoMessage() {}

func (x *VersionParams) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionParams.ProtoReflect.Descriptor instead.
func (*VersionParams) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{34}
}

func (x *VersionParams) GetAppVersion() uint64 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

type TxResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Tx            *Tx                    `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	Result        *ResponseDeliverTx     `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Hash          []byte                 `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxResult) Reset() {
	*x = TxResult{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResult) ProtoMessage() {}

func (x *TxResult) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResult.ProtoReflect.Descriptor instead.
func (*TxResult) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{35}
}

func (x *TxResult) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TxResult) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TxResult) GetTx() *Tx {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TxResult) GetResult() *ResponseDeliverTx {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TxResult) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Tx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          *TxBody                `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	AuthInfo      *AuthInfo              `protobuf:"bytes,2,opt,name=auth_info,json=authInfo,proto3" json:"auth_info,omitempty"`
	Signatures    [][]byte               `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tx) Reset() {
	*x = Tx{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{36}
}

func (x *Tx) GetBody() *TxBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Tx) GetAuthInfo() *AuthInfo {
	if x != nil {
		return x.AuthInfo
	}
	return nil
}

func (x *Tx) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type TxBody struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Messages                    []*anypb.Any           `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Memo                        string                 `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	TimeoutHeight               uint64                 `protobuf:"varint,3,opt,name=timeout_height,json=timeoutHeight,proto3" json:"timeout_height,omitempty"`
	ExtensionOptions            []*anypb.Any           `protobuf:"bytes,1023,rep,name=extension_options,json=extensionOptions,proto3" json:"extension_options,omitempty"`
	NonCriticalExtensionOptions []*anypb.Any           `protobuf:"bytes,2047,rep,name=non_critical_extension_options,json=nonCriticalExtensionOptions,proto3" json:"non_critical_extension_options,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *TxBody) Reset() {
	*x = TxBody{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxBody) ProtoMessage() {}

func (x *TxBody) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxBody.ProtoReflect.Descriptor instead.
func (*TxBody) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{37}
}

func (x *TxBody) GetMessages() []*anypb.Any {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *TxBody) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *TxBody) GetTimeoutHeight() uint64 {
	if x != nil {
		return x.TimeoutHeight
	}
	return 0
}

func (x *TxBody) GetExtensionOptions() []*anypb.Any {
	if x != nil {
		return x.ExtensionOptions
	}
	return nil
}

func (x *TxBody) GetNonCriticalExtensionOptions() []*anypb.Any {
	if x != nil {
		return x.NonCriticalExtensionOptions
	}
	return nil
}

type Any struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeUrl       string                 `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Any) Reset() {
	*x = Any{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{38}
}

func (x *Any) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *Any) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type AuthInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignerInfos   []*SignerInfo          `protobuf:"bytes,1,rep,name=signer_infos,json=signerInfos,proto3" json:"signer_infos,omitempty"`
	Fee           *Fee                   `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
	Tip           *Tip                   `protobuf:"bytes,3,opt,name=tip,proto3" json:"tip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthInfo) Reset() {
	*x = AuthInfo{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInfo) ProtoMessage() {}

func (x *AuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInfo.ProtoReflect.Descriptor instead.
func (*AuthInfo) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{39}
}

func (x *AuthInfo) GetSignerInfos() []*SignerInfo {
	if x != nil {
		return x.SignerInfos
	}
	return nil
}

func (x *AuthInfo) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *AuthInfo) GetTip() *Tip {
	if x != nil {
		return x.Tip
	}
	return nil
}

type SignerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     *anypb.Any             `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ModeInfo      *ModeInfo              `protobuf:"bytes,2,opt,name=mode_info,json=modeInfo,proto3" json:"mode_info,omitempty"`
	Sequence      uint64                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignerInfo) Reset() {
	*x = SignerInfo{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignerInfo) ProtoMessage() {}

func (x *SignerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignerInfo.ProtoReflect.Descriptor instead.
func (*SignerInfo) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{40}
}

func (x *SignerInfo) GetPublicKey() *anypb.Any {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SignerInfo) GetModeInfo() *ModeInfo {
	if x != nil {
		return x.ModeInfo
	}
	return nil
}

func (x *SignerInfo) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type ModeInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Sum:
	//
	//	*ModeInfo_Single
	//	*ModeInfo_Multi
	Sum           isModeInfo_Sum `protobuf_oneof:"sum"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModeInfo) Reset() {
	*x = ModeInfo{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeInfo) ProtoMessage() {}

func (x *ModeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeInfo.ProtoReflect.Descriptor instead.
func (*ModeInfo) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{41}
}

func (x *ModeInfo) GetSum() isModeInfo_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *ModeInfo) GetSingle() *ModeInfoSingle {
	if x != nil {
		if x, ok := x.Sum.(*ModeInfo_Single); ok {
			return x.Single
		}
	}
	return nil
}

func (x *ModeInfo) GetMulti() *ModeInfoMulti {
	if x != nil {
		if x, ok := x.Sum.(*ModeInfo_Multi); ok {
			return x.Multi
		}
	}
	return nil
}

type isModeInfo_Sum interface {
	isModeInfo_Sum()
}

type ModeInfo_Single struct {
	Single *ModeInfoSingle `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type ModeInfo_Multi struct {
	Multi *ModeInfoMulti `protobuf:"bytes,2,opt,name=multi,proto3,oneof"`
}

func (*ModeInfo_Single) isModeInfo_Sum() {}

func (*ModeInfo_Multi) isModeInfo_Sum() {}

type ModeInfoSingle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          SignMode               `protobuf:"varint,1,opt,name=mode,proto3,enum=sf.cosmos.type.v1.SignMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModeInfoSingle) Reset() {
	*x = ModeInfoSingle{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModeInfoSingle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeInfoSingle) ProtoMessage() {}

func (x *ModeInfoSingle) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeInfoSingle.ProtoReflect.Descriptor instead.
func (*ModeInfoSingle) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{42}
}

func (x *ModeInfoSingle) GetMode() SignMode {
	if x != nil {
		return x.Mode
	}
	return SignMode_SIGN_MODE_UNSPECIFIED
}

type ModeInfoMulti struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bitarray      *CompactBitArray       `protobuf:"bytes,1,opt,name=bitarray,proto3" json:"bitarray,omitempty"`
	ModeInfos     []*ModeInfo            `protobuf:"bytes,2,rep,name=mode_infos,json=modeInfos,proto3" json:"mode_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModeInfoMulti) Reset() {
	*x = ModeInfoMulti{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModeInfoMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeInfoMulti) ProtoMessage() {}

func (x *ModeInfoMulti) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeInfoMulti.ProtoReflect.Descriptor instead.
func (*ModeInfoMulti) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{43}
}

func (x *ModeInfoMulti) GetBitarray() *CompactBitArray {
	if x != nil {
		return x.Bitarray
	}
	return nil
}

func (x *ModeInfoMulti) GetModeInfos() []*ModeInfo {
	if x != nil {
		return x.ModeInfos
	}
	return nil
}

type CompactBitArray struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ExtraBitsStored uint32                 `protobuf:"varint,1,opt,name=extra_bits_stored,json=extraBitsStored,proto3" json:"extra_bits_stored,omitempty"`
	Elems           []byte                 `protobuf:"bytes,2,opt,name=elems,proto3" json:"elems,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CompactBitArray) Reset() {
	*x = CompactBitArray{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactBitArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactBitArray) ProtoMessage() {}

func (x *CompactBitArray) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactBitArray.ProtoReflect.Descriptor instead.
func (*CompactBitArray) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{44}
}

func (x *CompactBitArray) GetExtraBitsStored() uint32 {
	if x != nil {
		return x.ExtraBitsStored
	}
	return 0
}

func (x *CompactBitArray) GetElems() []byte {
	if x != nil {
		return x.Elems
	}
	return nil
}

type Fee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        []*Coin                `protobuf:"bytes,1,rep,name=amount,proto3" json:"amount,omitempty"`
	GasLimit      uint64                 `protobuf:"varint,2,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Payer         string                 `protobuf:"bytes,3,opt,name=payer,proto3" json:"payer,omitempty"`
	Granter       string                 `protobuf:"bytes,4,opt,name=granter,proto3" json:"granter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fee) Reset() {
	*x = Fee{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{45}
}

func (x *Fee) GetAmount() []*Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Fee) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *Fee) GetPayer() string {
	if x != nil {
		return x.Payer
	}
	return ""
}

func (x *Fee) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

type Coin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Denom         string                 `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{46}
}

func (x *Coin) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *Coin) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Tip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        []*Coin                `protobuf:"bytes,1,rep,name=amount,proto3" json:"amount,omitempty"`
	Tipper        string                 `protobuf:"bytes,2,opt,name=tipper,proto3" json:"tipper,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tip) Reset() {
	*x = Tip{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tip) ProtoMessage() {}

func (x *Tip) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tip.ProtoReflect.Descriptor instead.
func (*Tip) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{47}
}

func (x *Tip) GetAmount() []*Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Tip) GetTipper() string {
	if x != nil {
		return x.Tipper
	}
	return ""
}

type ResponseDeliverTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Log           string                 `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Info          string                 `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	GasWanted     int64                  `protobuf:"varint,5,opt,name=gas_wanted,json=gasWanted,proto3" json:"gas_wanted,omitempty"`
	GasUsed       int64                  `protobuf:"varint,6,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Events        []*Event               `protobuf:"bytes,7,rep,name=events,proto3" json:"events,omitempty"`
	Codespace     string                 `protobuf:"bytes,8,opt,name=codespace,proto3" json:"codespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseDeliverTx) Reset() {
	*x = ResponseDeliverTx{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseDeliverTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDeliverTx) ProtoMessage() {}

func (x *ResponseDeliverTx) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDeliverTx.ProtoReflect.Descriptor instead.
func (*ResponseDeliverTx) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{48}
}

func (x *ResponseDeliverTx) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseDeliverTx) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseDeliverTx) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ResponseDeliverTx) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *ResponseDeliverTx) GetGasWanted() int64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *ResponseDeliverTx) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ResponseDeliverTx) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ResponseDeliverTx) GetCodespace() string {
	if x != nil {
		return x.Codespace
	}
	return ""
}

type ValidatorSetUpdates struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ValidatorUpdates []*Validator           `protobuf:"bytes,1,rep,name=validator_updates,json=validatorUpdates,proto3" json:"validator_updates,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidatorSetUpdates) Reset() {
	*x = ValidatorSetUpdates{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorSetUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSetUpdates) ProtoMessage() {}

func (x *ValidatorSetUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorSetUpdates.ProtoReflect.Descriptor instead.
func (*ValidatorSetUpdates) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{49}
}

func (x *ValidatorSetUpdates) GetValidatorUpdates() []*Validator {
	if x != nil {
		return x.ValidatorUpdates
	}
	return nil
}

type ExtendedCommitSig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BlockIdFlag        BlockIDFlag            `protobuf:"varint,1,opt,name=block_id_flag,json=blockIdFlag,proto3,enum=sf.cosmos.type.v1.BlockIDFlag" json:"block_id_flag,omitempty"`
	ValidatorAddress   []byte                 `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Timestamp          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature          []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Extension          []byte                 `protobuf:"bytes,5,opt,name=extension,proto3" json:"extension,omitempty"`
	ExtensionSignature []byte                 `protobuf:"bytes,6,opt,name=extension_signature,json=extensionSignature,proto3" json:"extension_signature,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExtendedCommitSig) Reset() {
	*x = ExtendedCommitSig{}
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendedCommitSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedCommitSig) ProtoMessage() {}

func (x *ExtendedCommitSig) ProtoReflect() protoreflect.Message {
	mi := &file_sf_cosmos_type_v1_type_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedCommitSig.ProtoReflect.Descriptor instead.
func (*ExtendedCommitSig) Descriptor() ([]byte, []int) {
	return file_sf_cosmos_type_v1_type_proto_rawDescGZIP(), []int{50}
}

func (x *ExtendedCommitSig) GetBlockIdFlag() BlockIDFlag {
	if x != nil {
		return x.BlockIdFlag
	}
	return BlockIDFlag_BLOCK_ID_FLAG_UNKNOWN
}

func (x *ExtendedCommitSig) GetValidatorAddress() []byte {
	if x != nil {
		return x.ValidatorAddress
	}
	return nil
}

func (x *ExtendedCommitSig) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ExtendedCommitSig) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ExtendedCommitSig) GetExtension() []byte {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *ExtendedCommitSig) GetExtensionSignature() []byte {
	if x != nil {
		return x.ExtensionSignature
	}
	return nil
}

var File_sf_cosmos_type_v1_type_proto protoreflect.FileDescriptor

const file_sf_cosmos_type_v1_type_proto_rawDesc = "" +
	"\n" +
	"\x1csf/cosmos/type/v1/type.proto\x12\x11sf.cosmos.type.v1\x1a google/protobuf/descriptor.proto\x1a\x19google/protobuf/any.proto\x1a\x14gogoproto/gogo.proto\x1a\x19cosmos_proto/cosmos.proto\x1a\x1afirehose/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb3\x03\n" +
	"\x05Block\x12;\n" +
	"\x06header\x18\x01 \x01(\v2\x19.sf.cosmos.type.v1.HeaderB\b\xc8\xde\x1f\x00\xc8\xcc%\x01R\x06header\x12A\n" +
	"\bevidence\x18\x02 \x01(\v2\x1f.sf.cosmos.type.v1.EvidenceListB\x04\xc8\xde\x1f\x00R\bevidence\x12:\n" +
	"\vlast_commit\x18\x03 \x01(\v2\x19.sf.cosmos.type.v1.CommitR\n" +
	"lastCommit\x12b\n" +
	"\x15result_finalize_block\x18\x06 \x01(\v2(.sf.cosmos.type.v1.ResponseFinalizeBlockB\x04\xc8\xcc%\x01R\x13resultFinalizeBlock\x12?\n" +
	"\ftransactions\x18\a \x03(\v2\x1b.sf.cosmos.type.v1.TxResultR\ftransactions\x12I\n" +
	"\x11validator_updates\x18\b \x03(\v2\x1c.sf.cosmos.type.v1.ValidatorR\x10validatorUpdates\"N\n" +
	"\x0fHeaderOnlyBlock\x12;\n" +
	"\x06header\x18\x01 \x01(\v2\x19.sf.cosmos.type.v1.HeaderB\b\xc8\xde\x1f\x00\xc8\xcc%\x01R\x06header\"\xb8\x01\n" +
	"\tEventData\x124\n" +
	"\x05event\x18\x01 \x01(\v2\x18.sf.cosmos.type.v1.EventB\x04\xc8\xcc%\x01R\x05event\x12>\n" +
	"\x05block\x18\x02 \x01(\v2\".sf.cosmos.type.v1.HeaderOnlyBlockB\x04\xc8\xcc%\x01R\x05block\x125\n" +
	"\x02tx\x18\x03 \x01(\v2%.sf.cosmos.type.v1.TransactionContextR\x02tx\"\x84\x01\n" +
	"\x0fTransactionData\x121\n" +
	"\x02tx\x18\x01 \x01(\v2\x1b.sf.cosmos.type.v1.TxResultB\x04\xc8\xcc%\x01R\x02tx\x12>\n" +
	"\x05block\x18\x02 \x01(\v2\".sf.cosmos.type.v1.HeaderOnlyBlockB\x04\xc8\xcc%\x01R\x05block\"\xc0\x01\n" +
	"\vMessageData\x124\n" +
	"\amessage\x18\x01 \x01(\v2\x14.google.protobuf.AnyB\x04\xc8\xcc%\x01R\amessage\x12>\n" +
	"\x05block\x18\x02 \x01(\v2\".sf.cosmos.type.v1.HeaderOnlyBlockB\x04\xc8\xcc%\x01R\x05block\x12;\n" +
	"\x02tx\x18\x03 \x01(\v2%.sf.cosmos.type.v1.TransactionContextB\x04\xc8\xcc%\x01R\x02tx\"\x8c\x01\n" +
	"\x12TransactionContext\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12\x12\n" +
	"\x04code\x18\x03 \x01(\rR\x04code\x12\x1d\n" +
	"\n" +
	"gas_wanted\x18\x04 \x01(\x03R\tgasWanted\x12\x19\n" +
	"\bgas_used\x18\x05 \x01(\x03R\agasUsed\"\x80\x05\n" +
	"\x06Header\x12<\n" +
	"\aversion\x18\x01 \x01(\v2\x1c.sf.cosmos.type.v1.ConsensusB\x04\xc8\xde\x1f\x00R\aversion\x12&\n" +
	"\bchain_id\x18\x02 \x01(\tB\v\xe2\xde\x1f\aChainIDR\achainId\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x04R\x06height\x12:\n" +
	"\x04time\x18\x04 \x01(\v2\x1c.sf.cosmos.type.v1.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\x04time\x12H\n" +
	"\rlast_block_id\x18\x05 \x01(\v2\x1a.sf.cosmos.type.v1.BlockIDB\b\xc8\xde\x1f\x00\xc8\xcc%\x01R\vlastBlockId\x12(\n" +
	"\x10last_commit_hash\x18\x06 \x01(\fR\x0elastCommitHash\x12\x1b\n" +
	"\tdata_hash\x18\a \x01(\fR\bdataHash\x12'\n" +
	"\x0fvalidators_hash\x18\b \x01(\fR\x0evalidatorsHash\x120\n" +
	"\x14next_validators_hash\x18\t \x01(\fR\x12nextValidatorsHash\x12%\n" +
	"\x0econsensus_hash\x18\n" +
	" \x01(\fR\rconsensusHash\x12\x19\n" +
	"\bapp_hash\x18\v \x01(\fR\aappHash\x12*\n" +
	"\x11last_results_hash\x18\f \x01(\fR\x0flastResultsHash\x12#\n" +
	"\revidence_hash\x18\r \x01(\fR\fevidenceHash\x12)\n" +
	"\x10proposer_address\x18\x0e \x01(\fR\x0fproposerAddress\x12\x12\n" +
	"\x04hash\x18\x0f \x01(\fR\x04hash\"9\n" +
	"\tConsensus\x12\x14\n" +
	"\x05block\x18\x01 \x01(\x04R\x05block\x12\x10\n" +
	"\x03app\x18\x02 \x01(\x04R\x03app:\x04\xe8\xa0\x1f\x01\";\n" +
	"\tTimestamp\x12\x18\n" +
	"\aseconds\x18\x01 \x01(\x03R\aseconds\x12\x14\n" +
	"\x05nanos\x18\x02 \x01(\x05R\x05nanos\"m\n" +
	"\aBlockID\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12N\n" +
	"\x0fpart_set_header\x18\x02 \x01(\v2 .sf.cosmos.type.v1.PartSetHeaderB\x04\xc8\xde\x1f\x00R\rpartSetHeader\"9\n" +
	"\rPartSetHeader\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\"M\n" +
	"\fEvidenceList\x12=\n" +
	"\bevidence\x18\x01 \x03(\v2\x1b.sf.cosmos.type.v1.EvidenceB\x04\xc8\xde\x1f\x00R\bevidence\"\xe6\x01\n" +
	"\bEvidence\x12b\n" +
	"\x17duplicate_vote_evidence\x18\x01 \x01(\v2(.sf.cosmos.type.v1.DuplicateVoteEvidenceH\x00R\x15duplicateVoteEvidence\x12o\n" +
	"\x1clight_client_attack_evidence\x18\x02 \x01(\v2,.sf.cosmos.type.v1.LightClientAttackEvidenceH\x00R\x19lightClientAttackEvidenceB\x05\n" +
	"\x03sum\"\x9e\x02\n" +
	"\x15DuplicateVoteEvidence\x123\n" +
	"\x06vote_a\x18\x01 \x01(\v2\x1c.sf.cosmos.type.v1.EventVoteR\x05voteA\x123\n" +
	"\x06vote_b\x18\x02 \x01(\v2\x1c.sf.cosmos.type.v1.EventVoteR\x05voteB\x12,\n" +
	"\x12total_voting_power\x18\x03 \x01(\x03R\x10totalVotingPower\x12'\n" +
	"\x0fvalidator_power\x18\x04 \x01(\x03R\x0evalidatorPower\x12D\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1c.sf.cosmos.type.v1.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\ttimestamp\"\xc9\x03\n" +
	"\tEventVote\x12?\n" +
	"\x0fevent_vote_type\x18\x01 \x01(\x0e2 .sf.cosmos.type.v1.SignedMsgTypeR\x04type\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x04R\x06height\x12\x14\n" +
	"\x05round\x18\x03 \x01(\x05R\x05round\x12F\n" +
	"\bblock_id\x18\x04 \x01(\v2\x1a.sf.cosmos.type.v1.BlockIDB\x0f\xc8\xde\x1f\x00\xe2\xde\x1f\aBlockIDR\ablockId\x12B\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\ttimestamp\x12+\n" +
	"\x11validator_address\x18\x06 \x01(\fR\x10validatorAddress\x12'\n" +
	"\x0fvalidator_index\x18\a \x01(\x05R\x0evalidatorIndex\x12\x1c\n" +
	"\tsignature\x18\b \x01(\fR\tsignature\x12\x1c\n" +
	"\textension\x18\t \x01(\fR\textension\x12/\n" +
	"\x13extension_signature\x18\n" +
	" \x01(\fR\x12extensionSignature\"\xd1\x02\n" +
	"\x19LightClientAttackEvidence\x12J\n" +
	"\x11conflicting_block\x18\x01 \x01(\v2\x1d.sf.cosmos.type.v1.LightBlockR\x10conflictingBlock\x12#\n" +
	"\rcommon_height\x18\x02 \x01(\x03R\fcommonHeight\x12O\n" +
	"\x14byzantine_validators\x18\x03 \x03(\v2\x1c.sf.cosmos.type.v1.ValidatorR\x13byzantineValidators\x12,\n" +
	"\x12total_voting_power\x18\x04 \x01(\x03R\x10totalVotingPower\x12D\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1c.sf.cosmos.type.v1.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\ttimestamp\"\x98\x01\n" +
	"\n" +
	"LightBlock\x12D\n" +
	"\rsigned_header\x18\x01 \x01(\v2\x1f.sf.cosmos.type.v1.SignedHeaderR\fsignedHeader\x12D\n" +
	"\rvalidator_set\x18\x02 \x01(\v2\x1f.sf.cosmos.type.v1.ValidatorSetR\fvalidatorSet\"t\n" +
	"\fSignedHeader\x121\n" +
	"\x06header\x18\x01 \x01(\v2\x19.sf.cosmos.type.v1.HeaderR\x06header\x121\n" +
	"\x06commit\x18\x02 \x01(\v2\x19.sf.cosmos.type.v1.CommitR\x06commit\"\xc2\x01\n" +
	"\x06Commit\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x03R\x06height\x12\x14\n" +
	"\x05round\x18\x02 \x01(\x05R\x05round\x12F\n" +
	"\bblock_id\x18\x03 \x01(\v2\x1a.sf.cosmos.type.v1.BlockIDB\x0f\xc8\xde\x1f\x00\xe2\xde\x1f\aBlockIDR\ablockId\x12B\n" +
	"\n" +
	"signatures\x18\x04 \x03(\v2\x1c.sf.cosmos.type.v1.CommitSigB\x04\xc8\xde\x1f\x00R\n" +
	"signatures\"\xde\x01\n" +
	"\tCommitSig\x12B\n" +
	"\rblock_id_flag\x18\x01 \x01(\x0e2\x1e.sf.cosmos.type.v1.BlockIDFlagR\vblockIdFlag\x12+\n" +
	"\x11validator_address\x18\x02 \x01(\fR\x10validatorAddress\x12B\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"\xb4\x01\n" +
	"\fValidatorSet\x12<\n" +
	"\n" +
	"validators\x18\x01 \x03(\v2\x1c.sf.cosmos.type.v1.ValidatorR\n" +
	"validators\x128\n" +
	"\bproposer\x18\x02 \x01(\v2\x1c.sf.cosmos.type.v1.ValidatorR\bproposer\x12,\n" +
	"\x12total_voting_power\x18\x03 \x01(\x03R\x10totalVotingPower\"\xb2\x01\n" +
	"\tValidator\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12;\n" +
	"\apub_key\x18\x02 \x01(\v2\x1c.sf.cosmos.type.v1.PublicKeyB\x04\xc8\xde\x1f\x00R\x06pubKey\x12!\n" +
	"\fvoting_power\x18\x03 \x01(\x03R\vvotingPower\x12+\n" +
	"\x11proposer_priority\x18\x04 \x01(\x03R\x10proposerPriority\"X\n" +
	"\tPublicKey\x12\x1a\n" +
	"\aed25519\x18\x01 \x01(\fH\x00R\aed25519\x12\x1e\n" +
	"\tsecp256k1\x18\x02 \x01(\fH\x00R\tsecp256k1:\b\xe8\xa0\x1f\x01\xe8\xa1\x1f\x01B\x05\n" +
	"\x03sum\"`\n" +
	"\x12ResponseBeginBlock\x12J\n" +
	"\x06events\x18\x01 \x03(\v2\x18.sf.cosmos.type.v1.EventB\x18\xc8\xde\x1f\x00\xea\xde\x1f\x10events,omitemptyR\x06events\"\xf1\x01\n" +
	"\x10ResponseEndBlock\x12O\n" +
	"\x11validator_updates\x18\x01 \x03(\v2\".sf.cosmos.type.v1.ValidatorUpdateR\x10validatorUpdates\x12Z\n" +
	"\x17consensus_param_updates\x18\x02 \x01(\v2\".sf.cosmos.type.v1.ConsensusParamsR\x15consensusParamUpdates\x120\n" +
	"\x06events\x18\x03 \x03(\v2\x18.sf.cosmos.type.v1.EventR\x06events\"\x91\x02\n" +
	"\x15ResponseFinalizeBlock\x120\n" +
	"\x06events\x18\x01 \x03(\v2\x18.sf.cosmos.type.v1.EventR\x06events\x12O\n" +
	"\x11validator_updates\x18\x02 \x03(\v2\".sf.cosmos.type.v1.ValidatorUpdateR\x10validatorUpdates\x12Z\n" +
	"\x17consensus_param_updates\x18\x03 \x01(\v2\".sf.cosmos.type.v1.ConsensusParamsR\x15consensusParamUpdates\x12\x19\n" +
	"\bapp_hash\x18\x04 \x01(\fR\aappHash\"\x82\x01\n" +
	"\x05Event\x12\x18\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\x04type\x12_\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2!.sf.cosmos.type.v1.EventAttributeB\x1c\xc8\xde\x1f\x00\xea\xde\x1f\x14attributes,omitemptyR\n" +
	"attributes\"N\n" +
	"\x0eEventAttribute\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x14\n" +
	"\x05index\x18\x03 \x01(\bR\x05index\"~\n" +
	"\x0fValidatorUpdate\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12;\n" +
	"\apub_key\x18\x02 \x01(\v2\x1c.sf.cosmos.type.v1.PublicKeyB\x04\xc8\xde\x1f\x00R\x06pubKey\x12\x14\n" +
	"\x05power\x18\x03 \x01(\x03R\x05power\"\x9c\x02\n" +
	"\x0fConsensusParams\x12:\n" +
	"\x05block\x18\x01 \x01(\v2\x1e.sf.cosmos.type.v1.BlockParamsB\x04\xc8\xde\x1f\x00R\x05block\x12C\n" +
	"\bevidence\x18\x02 \x01(\v2!.sf.cosmos.type.v1.EvidenceParamsB\x04\xc8\xde\x1f\x00R\bevidence\x12F\n" +
	"\tvalidator\x18\x03 \x01(\v2\".sf.cosmos.type.v1.ValidatorParamsB\x04\xc8\xde\x1f\x00R\tvalidator\x12@\n" +
	"\aversion\x18\x04 \x01(\v2 .sf.cosmos.type.v1.VersionParamsB\x04\xc8\xde\x1f\x00R\aversion\"C\n" +
	"\vBlockParams\x12\x1b\n" +
	"\tmax_bytes\x18\x01 \x01(\x03R\bmaxBytes\x12\x17\n" +
	"\amax_gas\x18\x02 \x01(\x03R\x06maxGas\"\xab\x01\n" +
	"\x0eEvidenceParams\x12+\n" +
	"\x12max_age_num_blocks\x18\x01 \x01(\x03R\x0fmaxAgeNumBlocks\x12O\n" +
	"\x10max_age_duration\x18\x02 \x01(\v2\x1b.sf.cosmos.type.v1.DurationB\b\xc8\xde\x1f\x00\x98\xdf\x1f\x01R\x0emaxAgeDuration\x12\x1b\n" +
	"\tmax_bytes\x18\x03 \x01(\x03R\bmaxBytes\":\n" +
	"\bDuration\x12\x18\n" +
	"\aseconds\x18\x01 \x01(\x03R\aseconds\x12\x14\n" +
	"\x05nanos\x18\x02 \x01(\x05R\x05nanos\"?\n" +
	"\x0fValidatorParams\x12\"\n" +
	"\rpub_key_types\x18\x01 \x03(\tR\vpubKeyTypes:\b\xb8\xa0\x1f\x01\xe8\xa0\x1f\x01\":\n" +
	"\rVersionParams\x12\x1f\n" +
	"\vapp_version\x18\x01 \x01(\x04R\n" +
	"appVersion:\b\xb8\xa0\x1f\x01\xe8\xa0\x1f\x01\"\xbd\x01\n" +
	"\bTxResult\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x04R\x06height\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12+\n" +
	"\x02tx\x18\x03 \x01(\v2\x15.sf.cosmos.type.v1.TxB\x04\xc8\xcc%\x01R\x02tx\x12B\n" +
	"\x06result\x18\x04 \x01(\v2$.sf.cosmos.type.v1.ResponseDeliverTxB\x04\xc8\xcc%\x01R\x06result\x12\x12\n" +
	"\x04hash\x18\x05 \x01(\fR\x04hash\"\x93\x01\n" +
	"\x02Tx\x123\n" +
	"\x04body\x18\x01 \x01(\v2\x19.sf.cosmos.type.v1.TxBodyB\x04\xc8\xcc%\x01R\x04body\x128\n" +
	"\tauth_info\x18\x02 \x01(\v2\x1b.sf.cosmos.type.v1.AuthInfoR\bauthInfo\x12\x1e\n" +
	"\n" +
	"signatures\x18\x03 \x03(\fR\n" +
	"signatures\"\x95\x02\n" +
	"\x06TxBody\x120\n" +
	"\bmessages\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\bmessages\x12\x12\n" +
	"\x04memo\x18\x02 \x01(\tR\x04memo\x12%\n" +
	"\x0etimeout_height\x18\x03 \x01(\x04R\rtimeoutHeight\x12B\n" +
	"\x11extension_options\x18\xff\a \x03(\v2\x14.google.protobuf.AnyR\x10extensionOptions\x12Z\n" +
	"\x1enon_critical_extension_options\x18\xff\x0f \x03(\v2\x14.google.protobuf.AnyR\x1bnonCriticalExtensionOptions\"6\n" +
	"\x03Any\x12\x19\n" +
	"\btype_url\x18\x01 \x01(\tR\atypeUrl\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"\xa0\x01\n" +
	"\bAuthInfo\x12@\n" +
	"\fsigner_infos\x18\x01 \x03(\v2\x1d.sf.cosmos.type.v1.SignerInfoR\vsignerInfos\x12(\n" +
	"\x03fee\x18\x02 \x01(\v2\x16.sf.cosmos.type.v1.FeeR\x03fee\x12(\n" +
	"\x03tip\x18\x03 \x01(\v2\x16.sf.cosmos.type.v1.TipR\x03tip\"\x97\x01\n" +
	"\n" +
	"SignerInfo\x123\n" +
	"\n" +
	"public_key\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\tpublicKey\x128\n" +
	"\tmode_info\x18\x02 \x01(\v2\x1b.sf.cosmos.type.v1.ModeInfoR\bmodeInfo\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\x04R\bsequence\"\x88\x01\n" +
	"\bModeInfo\x12;\n" +
	"\x06single\x18\x01 \x01(\v2!.sf.cosmos.type.v1.ModeInfoSingleH\x00R\x06single\x128\n" +
	"\x05multi\x18\x02 \x01(\v2 .sf.cosmos.type.v1.ModeInfoMultiH\x00R\x05multiB\x05\n" +
	"\x03sum\"A\n" +
	"\x0eModeInfoSingle\x12/\n" +
	"\x04mode\x18\x01 \x01(\x0e2\x1b.sf.cosmos.type.v1.SignModeR\x04mode\"\x8b\x01\n" +
	"\rModeInfoMulti\x12>\n" +
	"\bbitarray\x18\x01 \x01(\v2\".sf.cosmos.type.v1.CompactBitArrayR\bbitarray\x12:\n" +
	"\n" +
	"mode_infos\x18\x02 \x03(\v2\x1b.sf.cosmos.type.v1.ModeInfoR\tmodeInfos\"Y\n" +
	"\x0fCompactBitArray\x12*\n" +
	"\x11extra_bits_stored\x18\x01 \x01(\rR\x0fextraBitsStored\x12\x14\n" +
	"\x05elems\x18\x02 \x01(\fR\x05elems:\x04\x98\xa0\x1f\x00\"\xe9\x01\n" +
	"\x03Fee\x12a\n" +
	"\x06amount\x18\x01 \x03(\v2\x17.sf.cosmos.type.v1.CoinB0\xc8\xde\x1f\x00\xaa\xdf\x1f(github.com/cosmos/cosmos-sdk/types.CoinsR\x06amount\x12\x1b\n" +
	"\tgas_limit\x18\x02 \x01(\x04R\bgasLimit\x12.\n" +
	"\x05payer\x18\x03 \x01(\tB\x18Ҵ-\x14cosmos.AddressStringR\x05payer\x122\n" +
	"\agranter\x18\x04 \x01(\tB\x18Ҵ-\x14cosmos.AddressStringR\agranter\"G\n" +
	"\x04Coin\x12\x14\n" +
	"\x05denom\x18\x01 \x01(\tR\x05denom\x12#\n" +
	"\x06amount\x18\x02 \x01(\tB\v\xc8\xde\x1f\x00\xda\xde\x1f\x03IntR\x06amount:\x04\xe8\xa0\x1f\x01\"\x9a\x01\n" +
	"\x03Tip\x12a\n" +
	"\x06amount\x18\x01 \x03(\v2\x17.sf.cosmos.type.v1.CoinB0\xc8\xde\x1f\x00\xaa\xdf\x1f(github.com/cosmos/cosmos-sdk/types.CoinsR\x06amount\x120\n" +
	"\x06tipper\x18\x02 \x01(\tB\x18Ҵ-\x14cosmos.AddressStringR\x06tipper\"\x85\x02\n" +
	"\x11ResponseDeliverTx\x12\x12\n" +
	"\x04code\x18\x01 \x01(\rR\x04code\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x10\n" +
	"\x03log\x18\x03 \x01(\tR\x03log\x12\x12\n" +
	"\x04info\x18\x04 \x01(\tR\x04info\x12\x1d\n" +
	"\n" +
	"gas_wanted\x18\x05 \x01(\x03R\tgasWanted\x12\x19\n" +
	"\bgas_used\x18\x06 \x01(\x03R\agasUsed\x12J\n" +
	"\x06events\x18\a \x03(\v2\x18.sf.cosmos.type.v1.EventB\x18\xc8\xde\x1f\x00\xea\xde\x1f\x10events,omitemptyR\x06events\x12\x1c\n" +
	"\tcodespace\x18\b \x01(\tR\tcodespace\"`\n" +
	"\x13ValidatorSetUpdates\x12I\n" +
	"\x11validator_updates\x18\x01 \x03(\v2\x1c.sf.cosmos.type.v1.ValidatorR\x10validatorUpdates\"\xb5\x02\n" +
	"\x11ExtendedCommitSig\x12B\n" +
	"\rblock_id_flag\x18\x01 \x01(\x0e2\x1e.sf.cosmos.type.v1.BlockIDFlagR\vblockIdFlag\x12+\n" +
	"\x11validator_address\x18\x02 \x01(\fR\x10validatorAddress\x12B\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\b\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\x12\x1c\n" +
	"\textension\x18\x05 \x01(\fR\textension\x12/\n" +
	"\x13extension_signature\x18\x06 \x01(\fR\x12extensionSignature*\xd7\x01\n" +
	"\rSignedMsgType\x12,\n" +
	"\x17SIGNED_MSG_TYPE_UNKNOWN\x10\x00\x1a\x0f\x8a\x9d \vUnknownType\x12,\n" +
	"\x17SIGNED_MSG_TYPE_PREVOTE\x10\x01\x1a\x0f\x8a\x9d \vPrevoteType\x120\n" +
	"\x19SIGNED_MSG_TYPE_PRECOMMIT\x10\x02\x1a\x11\x8a\x9d \rPrecommitType\x12.\n" +
	"\x18SIGNED_MSG_TYPE_PROPOSAL\x10 \x1a\x10\x8a\x9d \fProposalType\x1a\b\x88\xa3\x1e\x00\xa8\xa4\x1e\x01*\xd7\x01\n" +
	"\vBlockIDFlag\x121\n" +
	"\x15BLOCK_ID_FLAG_UNKNOWN\x10\x00\x1a\x16\x8a\x9d \x12BlockIDFlagUnknown\x12/\n" +
	"\x14BLOCK_ID_FLAG_ABSENT\x10\x01\x1a\x15\x8a\x9d \x11BlockIDFlagAbsent\x12/\n" +
	"\x14BLOCK_ID_FLAG_COMMIT\x10\x02\x1a\x15\x8a\x9d \x11BlockIDFlagCommit\x12)\n" +
	"\x11BLOCK_ID_FLAG_NIL\x10\x03\x1a\x12\x8a\x9d \x0eBlockIDFlagNil\x1a\b\x88\xa3\x1e\x00\xa8\xa4\x1e\x01*s\n" +
	"\bSignMode\x12\x19\n" +
	"\x15SIGN_MODE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10SIGN_MODE_DIRECT\x10\x01\x12\x15\n" +
	"\x11SIGN_MODE_TEXTUAL\x10\x02\x12\x1f\n" +
	"\x1bSIGN_MODE_LEGACY_AMINO_JSON\x10\x7fBEZCgithub.com/graphprotocol/proto-cosmos/pb/sf/cosmos/type/v1;pbcosmosb\x06proto3"

var (
	file_sf_cosmos_type_v1_type_proto_rawDescOnce sync.Once
	file_sf_cosmos_type_v1_type_proto_rawDescData []byte
)

func file_sf_cosmos_type_v1_type_proto_rawDescGZIP() []byte {
	file_sf_cosmos_type_v1_type_proto_rawDescOnce.Do(func() {
		file_sf_cosmos_type_v1_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sf_cosmos_type_v1_type_proto_rawDesc), len(file_sf_cosmos_type_v1_type_proto_rawDesc)))
	})
	return file_sf_cosmos_type_v1_type_proto_rawDescData
}

var file_sf_cosmos_type_v1_type_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sf_cosmos_type_v1_type_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_sf_cosmos_type_v1_type_proto_goTypes = []any{
	(SignedMsgType)(0),                // 0: sf.cosmos.type.v1.SignedMsgType
	(BlockIDFlag)(0),                  // 1: sf.cosmos.type.v1.BlockIDFlag
	(SignMode)(0),                     // 2: sf.cosmos.type.v1.SignMode
	(*Block)(nil),                     // 3: sf.cosmos.type.v1.Block
	(*HeaderOnlyBlock)(nil),           // 4: sf.cosmos.type.v1.HeaderOnlyBlock
	(*EventData)(nil),                 // 5: sf.cosmos.type.v1.EventData
	(*TransactionData)(nil),           // 6: sf.cosmos.type.v1.TransactionData
	(*MessageData)(nil),               // 7: sf.cosmos.type.v1.MessageData
	(*TransactionContext)(nil),        // 8: sf.cosmos.type.v1.TransactionContext
	(*Header)(nil),                    // 9: sf.cosmos.type.v1.Header
	(*Consensus)(nil),                 // 10: sf.cosmos.type.v1.Consensus
	(*Timestamp)(nil),                 // 11: sf.cosmos.type.v1.Timestamp
	(*BlockID)(nil),                   // 12: sf.cosmos.type.v1.BlockID
	(*PartSetHeader)(nil),             // 13: sf.cosmos.type.v1.PartSetHeader
	(*EvidenceList)(nil),              // 14: sf.cosmos.type.v1.EvidenceList
	(*Evidence)(nil),                  // 15: sf.cosmos.type.v1.Evidence
	(*DuplicateVoteEvidence)(nil),     // 16: sf.cosmos.type.v1.DuplicateVoteEvidence
	(*EventVote)(nil),                 // 17: sf.cosmos.type.v1.EventVote
	(*LightClientAttackEvidence)(nil), // 18: sf.cosmos.type.v1.LightClientAttackEvidence
	(*LightBlock)(nil),                // 19: sf.cosmos.type.v1.LightBlock
	(*SignedHeader)(nil),              // 20: sf.cosmos.type.v1.SignedHeader
	(*Commit)(nil),                    // 21: sf.cosmos.type.v1.Commit
	(*CommitSig)(nil),                 // 22: sf.cosmos.type.v1.CommitSig
	(*ValidatorSet)(nil),              // 23: sf.cosmos.type.v1.ValidatorSet
	(*Validator)(nil),                 // 24: sf.cosmos.type.v1.Validator
	(*PublicKey)(nil),                 // 25: sf.cosmos.type.v1.PublicKey
	(*ResponseBeginBlock)(nil),        // 26: sf.cosmos.type.v1.ResponseBeginBlock
	(*ResponseEndBlock)(nil),          // 27: sf.cosmos.type.v1.ResponseEndBlock
	(*ResponseFinalizeBlock)(nil),     // 28: sf.cosmos.type.v1.ResponseFinalizeBlock
	(*Event)(nil),                     // 29: sf.cosmos.type.v1.Event
	(*EventAttribute)(nil),            // 30: sf.cosmos.type.v1.EventAttribute
	(*ValidatorUpdate)(nil),           // 31: sf.cosmos.type.v1.ValidatorUpdate
	(*ConsensusParams)(nil),           // 32: sf.cosmos.type.v1.ConsensusParams
	(*BlockParams)(nil),               // 33: sf.cosmos.type.v1.BlockParams
	(*EvidenceParams)(nil),            // 34: sf.cosmos.type.v1.EvidenceParams
	(*Duration)(nil),                  // 35: sf.cosmos.type.v1.Duration
	(*ValidatorParams)(nil),           // 36: sf.cosmos.type.v1.ValidatorParams
	(*VersionParams)(nil),             // 37: sf.cosmos.type.v1.VersionParams
	(*TxResult)(nil),                  // 38: sf.cosmos.type.v1.TxResult
	(*Tx)(nil),                        // 39: sf.cosmos.type.v1.Tx
	(*TxBody)(nil),                    // 40: sf.cosmos.type.v1.TxBody
	(*Any)(nil),                       // 41: sf.cosmos.type.v1.Any
	(*AuthInfo)(nil),                  // 42: sf.cosmos.type.v1.AuthInfo
	(*SignerInfo)(nil),                // 43: sf.cosmos.type.v1.SignerInfo
	(*ModeInfo)(nil),                  // 44: sf.cosmos.type.v1.ModeInfo
	(*ModeInfoSingle)(nil),            // 45: sf.cosmos.type.v1.ModeInfoSingle
	(*ModeInfoMulti)(nil),             // 46: sf.cosmos.type.v1.ModeInfoMulti
	(*CompactBitArray)(nil),           // 47: sf.cosmos.type.v1.CompactBitArray
	(*Fee)(nil),                       // 48: sf.cosmos.type.v1.Fee
	(*Coin)(nil),                      // 49: sf.cosmos.type.v1.Coin
	(*Tip)(nil),                       // 50: sf.cosmos.type.v1.Tip
	(*ResponseDeliverTx)(nil),         // 51: sf.cosmos.type.v1.ResponseDeliverTx
	(*ValidatorSetUpdates)(nil),       // 52: sf.cosmos.type.v1.ValidatorSetUpdates
	(*ExtendedCommitSig)(nil),         // 53: sf.cosmos.type.v1.ExtendedCommitSig
	(*anypb.Any)(nil),                 // 54: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),     // 55: google.protobuf.Timestamp
}
var file_sf_cosmos_type_v1_type_proto_depIdxs = []int32{
	9,  // 0: sf.cosmos.type.v1.Block.header:type_name -> sf.cosmos.type.v1.Header
	14, // 1: sf.cosmos.type.v1.Block.evidence:type_name -> sf.cosmos.type.v1.EvidenceList
	21, // 2: sf.cosmos.type.v1.Block.last_commit:type_name -> sf.cosmos.type.v1.Commit
	28, // 3: sf.cosmos.type.v1.Block.result_finalize_block:type_name -> sf.cosmos.type.v1.ResponseFinalizeBlock
	38, // 4: sf.cosmos.type.v1.Block.transactions:type_name -> sf.cosmos.type.v1.TxResult
	24, // 5: sf.cosmos.type.v1.Block.validator_updates:type_name -> sf.cosmos.type.v1.Validator
	9,  // 6: sf.cosmos.type.v1.HeaderOnlyBlock.header:type_name -> sf.cosmos.type.v1.Header
	29, // 7: sf.cosmos.type.v1.EventData.event:type_name -> sf.cosmos.type.v1.Event
	4,  // 8: sf.cosmos.type.v1.EventData.block:type_name -> sf.cosmos.type.v1.HeaderOnlyBlock
	8,  // 9: sf.cosmos.type.v1.EventData.tx:type_name -> sf.cosmos.type.v1.TransactionContext
	38, // 10: sf.cosmos.type.v1.TransactionData.tx:type_name -> sf.cosmos.type.v1.TxResult
	4,  // 11: sf.cosmos.type.v1.TransactionData.block:type_name -> sf.cosmos.type.v1.HeaderOnlyBlock
	54, // 12: sf.cosmos.type.v1.MessageData.message:type_name -> google.protobuf.Any
	4,  // 13: sf.cosmos.type.v1.MessageData.block:type_name -> sf.cosmos.type.v1.HeaderOnlyBlock
	8,  // 14: sf.cosmos.type.v1.MessageData.tx:type_name -> sf.cosmos.type.v1.TransactionContext
	10, // 15: sf.cosmos.type.v1.Header.version:type_name -> sf.cosmos.type.v1.Consensus
	11, // 16: sf.cosmos.type.v1.Header.time:type_name -> sf.cosmos.type.v1.Timestamp
	12, // 17: sf.cosmos.type.v1.Header.last_block_id:type_name -> sf.cosmos.type.v1.BlockID
	13, // 18: sf.cosmos.type.v1.BlockID.part_set_header:type_name -> sf.cosmos.type.v1.PartSetHeader
	15, // 19: sf.cosmos.type.v1.EvidenceList.evidence:type_name -> sf.cosmos.type.v1.Evidence
	16, // 20: sf.cosmos.type.v1.Evidence.duplicate_vote_evidence:type_name -> sf.cosmos.type.v1.DuplicateVoteEvidence
	18, // 21: sf.cosmos.type.v1.Evidence.light_client_attack_evidence:type_name -> sf.cosmos.type.v1.LightClientAttackEvidence
	17, // 22: sf.cosmos.type.v1.DuplicateVoteEvidence.vote_a:type_name -> sf.cosmos.type.v1.EventVote
	17, // 23: sf.cosmos.type.v1.DuplicateVoteEvidence.vote_b:type_name -> sf.cosmos.type.v1.EventVote
	11, // 24: sf.cosmos.type.v1.DuplicateVoteEvidence.timestamp:type_name -> sf.cosmos.type.v1.Timestamp
	0,  // 25: sf.cosmos.type.v1.EventVote.event_vote_type:type_name -> sf.cosmos.type.v1.SignedMsgType
	12, // 26: sf.cosmos.type.v1.EventVote.block_id:type_name -> sf.cosmos.type.v1.BlockID
	55, // 27: sf.cosmos.type.v1.EventVote.timestamp:type_name -> google.protobuf.Timestamp
	19, // 28: sf.cosmos.type.v1.LightClientAttackEvidence.conflicting_block:type_name -> sf.cosmos.type.v1.LightBlock
	24, // 29: sf.cosmos.type.v1.LightClientAttackEvidence.byzantine_validators:type_name -> sf.cosmos.type.v1.Validator
	11, // 30: sf.cosmos.type.v1.LightClientAttackEvidence.timestamp:type_name -> sf.cosmos.type.v1.Timestamp
	20, // 31: sf.cosmos.type.v1.LightBlock.signed_header:type_name -> sf.cosmos.type.v1.SignedHeader
	23, // 32: sf.cosmos.type.v1.LightBlock.validator_set:type_name -> sf.cosmos.type.v1.ValidatorSet
	9,  // 33: sf.cosmos.type.v1.SignedHeader.header:type_name -> sf.cosmos.type.v1.Header
	21, // 34: sf.cosmos.type.v1.SignedHeader.commit:type_name -> sf.cosmos.type.v1.Commit
	12, // 35: sf.cosmos.type.v1.Commit.block_id:type_name -> sf.cosmos.type.v1.BlockID
	22, // 36: sf.cosmos.type.v1.Commit.signatures:type_name -> sf.cosmos.type.v1.CommitSig
	1,  // 37: sf.cosmos.type.v1.CommitSig.block_id_flag:type_name -> sf.cosmos.type.v1.BlockIDFlag
	55, // 38: sf.cosmos.type.v1.CommitSig.timestamp:type_name -> google.protobuf.Timestamp
	24, // 39: sf.cosmos.type.v1.ValidatorSet.validators:type_name -> sf.cosmos.type.v1.Validator
	24, // 40: sf.cosmos.type.v1.ValidatorSet.proposer:type_name -> sf.cosmos.type.v1.Validator
	25, // 41: sf.cosmos.type.v1.Validator.pub_key:type_name -> sf.cosmos.type.v1.PublicKey
	29, // 42: sf.cosmos.type.v1.ResponseBeginBlock.events:type_name -> sf.cosmos.type.v1.Event
	31, // 43: sf.cosmos.type.v1.ResponseEndBlock.validator_updates:type_name -> sf.cosmos.type.v1.ValidatorUpdate
	32, // 44: sf.cosmos.type.v1.ResponseEndBlock.consensus_param_updates:type_name -> sf.cosmos.type.v1.ConsensusParams
	29, // 45: sf.cosmos.type.v1.ResponseEndBlock.events:type_name -> sf.cosmos.type.v1.Event
	29, // 46: sf.cosmos.type.v1.ResponseFinalizeBlock.events:type_name -> sf.cosmos.type.v1.Event
	31, // 47: sf.cosmos.type.v1.ResponseFinalizeBlock.validator_updates:type_name -> sf.cosmos.type.v1.ValidatorUpdate
	32, // 48: sf.cosmos.type.v1.ResponseFinalizeBlock.consensus_param_updates:type_name -> sf.cosmos.type.v1.ConsensusParams
	30, // 49: sf.cosmos.type.v1.Event.attributes:type_name -> sf.cosmos.type.v1.EventAttribute
	25, // 50: sf.cosmos.type.v1.ValidatorUpdate.pub_key:type_name -> sf.cosmos.type.v1.PublicKey
	33, // 51: sf.cosmos.type.v1.ConsensusParams.block:type_name -> sf.cosmos.type.v1.BlockParams
	34, // 52: sf.cosmos.type.v1.ConsensusParams.evidence:type_name -> sf.cosmos.type.v1.EvidenceParams
	36, // 53: sf.cosmos.type.v1.ConsensusParams.validator:type_name -> sf.cosmos.type.v1.ValidatorParams
	37, // 54: sf.cosmos.type.v1.ConsensusParams.version:type_name -> sf.cosmos.type.v1.VersionParams
	35, // 55: sf.cosmos.type.v1.EvidenceParams.max_age_duration:type_name -> sf.cosmos.type.v1.Duration
	39, // 56: sf.cosmos.type.v1.TxResult.tx:type_name -> sf.cosmos.type.v1.Tx
	51, // 57: sf.cosmos.type.v1.TxResult.result:type_name -> sf.cosmos.type.v1.ResponseDeliverTx
	40, // 58: sf.cosmos.type.v1.Tx.body:type_name -> sf.cosmos.type.v1.TxBody
	42, // 59: sf.cosmos.type.v1.Tx.auth_info:type_name -> sf.cosmos.type.v1.AuthInfo
	54, // 60: sf.cosmos.type.v1.TxBody.messages:type_name -> google.protobuf.Any
	54, // 61: sf.cosmos.type.v1.TxBody.extension_options:type_name -> google.protobuf.Any
	54, // 62: sf.cosmos.type.v1.TxBody.non_critical_extension_options:type_name -> google.protobuf.Any
	43, // 63: sf.cosmos.type.v1.AuthInfo.signer_infos:type_name -> sf.cosmos.type.v1.SignerInfo
	48, // 64: sf.cosmos.type.v1.AuthInfo.fee:type_name -> sf.cosmos.type.v1.Fee
	50, // 65: sf.cosmos.type.v1.AuthInfo.tip:type_name -> sf.cosmos.type.v1.Tip
	54, // 66: sf.cosmos.type.v1.SignerInfo.public_key:type_name -> google.protobuf.Any
	44, // 67: sf.cosmos.type.v1.SignerInfo.mode_info:type_name -> sf.cosmos.type.v1.ModeInfo
	45, // 68: sf.cosmos.type.v1.ModeInfo.single:type_name -> sf.cosmos.type.v1.ModeInfoSingle
	46, // 69: sf.cosmos.type.v1.ModeInfo.multi:type_name -> sf.cosmos.type.v1.ModeInfoMulti
	2,  // 70: sf.cosmos.type.v1.ModeInfoSingle.mode:type_name -> sf.cosmos.type.v1.SignMode
	47, // 71: sf.cosmos.type.v1.ModeInfoMulti.bitarray:type_name -> sf.cosmos.type.v1.CompactBitArray
	44, // 72: sf.cosmos.type.v1.ModeInfoMulti.mode_infos:type_name -> sf.cosmos.type.v1.ModeInfo
	49, // 73: sf.cosmos.type.v1.Fee.amount:type_name -> sf.cosmos.type.v1.Coin
	49, // 74: sf.cosmos.type.v1.Tip.amount:type_name -> sf.cosmos.type.v1.Coin
	29, // 75: sf.cosmos.type.v1.ResponseDeliverTx.events:type_name -> sf.cosmos.type.v1.Event
	24, // 76: sf.cosmos.type.v1.ValidatorSetUpdates.validator_updates:type_name -> sf.cosmos.type.v1.Validator
	1,  // 77: sf.cosmos.type.v1.ExtendedCommitSig.block_id_flag:type_name -> sf.cosmos.type.v1.BlockIDFlag
	55, // 78: sf.cosmos.type.v1.ExtendedCommitSig.timestamp:type_name -> google.protobuf.Timestamp
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_sf_cosmos_type_v1_type_proto_init() }
func file_sf_cosmos_type_v1_type_proto_init() {
	if File_sf_cosmos_type_v1_type_proto != nil {
		return
	}
	file_sf_cosmos_type_v1_type_proto_msgTypes[12].OneofWrappers = []any{
		(*Evidence_DuplicateVoteEvidence)(nil),
		(*Evidence_LightClientAttackEvidence)(nil),
	}
	file_sf_cosmos_type_v1_type_proto_msgTypes[22].OneofWrappers = []any{
		(*PublicKey_Ed25519)(nil),
		(*PublicKey_Secp256K1)(nil),
	}
	file_sf_cosmos_type_v1_type_proto_msgTypes[41].OneofWrappers = []any{
		(*ModeInfo_Single)(nil),
		(*ModeInfo_Multi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sf_cosmos_type_v1_type_proto_rawDesc), len(file_sf_cosmos_type_v1_type_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_cosmos_type_v1_type_proto_goTypes,
		DependencyIndexes: file_sf_cosmos_type_v1_type_proto_depIdxs,
		EnumInfos:         file_sf_cosmos_type_v1_type_proto_enumTypes,
		MessageInfos:      file_sf_cosmos_type_v1_type_proto_msgTypes,
	}.Build()
	File_sf_cosmos_type_v1_type_proto = out.File
	file_sf_cosmos_type_v1_type_proto_goTypes = nil
	file_sf_cosmos_type_v1_type_proto_depIdxs = nil
}
